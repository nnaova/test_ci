name: CI & Release

# Déclencheurs : tests à chaque commit/PR sur main, release manuelle ou sur tag
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  create:
    tags:
      - 'v*.*.*'

# Permissions globales
permissions:
  contents: write      # pour pouvoir push des tags & créer des releases
  id-token: write      # si vous utilisez OIDC
  actions: read

jobs:
  build:
    name: Build · Lint · Test
    runs-on: ubuntu-latest
    permissions:
      contents: read   # lecture seule pendant le build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0    # nécessaire pour retrouver l’historique et tags

      - name: Cache Pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Run linter (flutter analyze)
        run: flutter analyze

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    # Ne lancer que manuellement ou sur création de tag vX.Y.Z
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'create' && startsWith(github.ref, 'refs/tags/'))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Make release.sh executable
        run: chmod +x ./release.sh

      - name: Run release script
        run: ./release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN:   ${{ secrets.GITHUB_TOKEN }}